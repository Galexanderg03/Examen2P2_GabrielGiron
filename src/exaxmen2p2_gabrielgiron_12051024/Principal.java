/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exaxmen2p2_gabrielgiron_12051024;

import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Galex
 */
public class Principal extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        UpdateCBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        POPUPMENU = new javax.swing.JPopupMenu();
        Planeta1Menu = new javax.swing.JMenuItem();
        Planeta2Menu = new javax.swing.JMenuItem();
        Barra = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        Arbol = new javax.swing.JTree();
        Colisiones = new javax.swing.JButton();
        Planeta2Field = new javax.swing.JTextField();
        Planeta1Field = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        CientificosBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        Publicos = new javax.swing.JCheckBox();
        AddC = new javax.swing.JButton();

        Planeta1Menu.setText("Planeta 1");
        Planeta1Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Planeta1MenuActionPerformed(evt);
            }
        });
        POPUPMENU.add(Planeta1Menu);

        Planeta2Menu.setText("Planeta 2");
        Planeta2Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Planeta2MenuActionPerformed(evt);
            }
        });
        POPUPMENU.add(Planeta2Menu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Planetas");
        Arbol.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        Arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ArbolMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ArbolMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Arbol);

        Colisiones.setText("Colisionar");
        Colisiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColisionesActionPerformed(evt);
            }
        });

        jLabel1.setText("Cientificos");

        CientificosBox.setModel(new DefaultComboBoxModel());
        CientificosBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CientificosBoxItemStateChanged(evt);
            }
        });
        CientificosBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CientificosBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        Publicos.setText("Publicos");
        Publicos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PublicosItemStateChanged(evt);
            }
        });

        AddC.setText("Agregar Cientifico");
        AddC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Barra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Planeta2Field, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(Planeta1Field))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(CientificosBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(NameField)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Colisiones, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Publicos)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Barra, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(Planeta1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addComponent(Planeta2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Colisiones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CientificosBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddC)))
                .addGap(18, 18, 18)
                .addComponent(Publicos)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PublicosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PublicosItemStateChanged
        // TODO add your handling code here:
        if(Publicos.isSelected())
        {
            DefaultTreeModel ModeloArbol = (DefaultTreeModel) Arbol.getModel();
            DefaultMutableTreeNode Raiz = (DefaultMutableTreeNode) ModeloArbol.getRoot();
            for(Planetas P : PlanetasPublicos)
            {
                DefaultMutableTreeNode L = new DefaultMutableTreeNode(P);
                Raiz.add(L);
            }
            ModeloArbol.reload();
        }
        else
        {
            DefaultTreeModel ModeloArbol = (DefaultTreeModel) Arbol.getModel();
            DefaultMutableTreeNode Raiz = (DefaultMutableTreeNode) ModeloArbol.getRoot();
            Raiz.removeAllChildren();
            Cientificos C = (Cientificos) CientificosBox.getSelectedItem();
            for(Planetas P : C.getDescubiertos())
            {
                DefaultMutableTreeNode L = new DefaultMutableTreeNode(P);
                Raiz.add(L);
            }
            ModeloArbol.reload();
        }
    }//GEN-LAST:event_PublicosItemStateChanged

    private void CientificosBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CientificosBoxItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_CientificosBoxItemStateChanged

    private void AddCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCActionPerformed
        // TODO add your handling code here:
        String Name = NameField.getText();
        AdminCientificos C = new AdminCientificos("./Cientificos");
        C.cargarArchivo();
        Cientificos c = new Cientificos(Name);
        C.getListaCientificos().add(c);
        C.escribirArchivo();
        UpdateCBox();
    }//GEN-LAST:event_AddCActionPerformed

    private void ColisionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColisionesActionPerformed
        // TODO add your handling code here:
        Random R = new Random();
        int Probabilidad = 1+R.nextInt(100);
        int xtotal = Planeta2.getX() - Planeta1.getX();
        int ytotal = Planeta2.getY() - Planeta1.getY();
        double x = Math.pow(xtotal, 2);
        double y = Math.pow(ytotal, 2);
        double total = x + y;
        double Distancia = Math.sqrt(total);
        if(Planeta1 instanceof Terrestre)
        {
            if(Probabilidad <= 25)
            {
                JOptionPane.showMessageDialog(null, "Se Ha Creado un nuevo planeta por la colision");
                String Name = JOptionPane.showInputDialog("Ingrese el Nombre");
                int Tamaño = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el Tamaño del Planeta"));
                int Peso = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el Peso del Planeta"));
                int X = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la distancia X del planeta"));
                int Y = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la distancia Y del planeta"));
                Planetas P = new Terrestre(Tamaño, Peso, Name, X, Y);
            }
        }
        else if(Planeta2 instanceof Gaseosos)
        {
            if(Probabilidad <= 20)
            {
                JOptionPane.showMessageDialog(null, "Se Ha Creado un nuevo planeta por la colision");
                String Name = JOptionPane.showInputDialog("Ingrese el Nombre");
                int Tamaño = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el Tamaño del Planeta"));
                int Peso = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el Peso del Planeta"));
                int X = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la distancia X del planeta"));
                int Y = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la distancia Y del planeta"));
                Planetas P = new Terrestre(Tamaño, Peso, Name, X, Y);
            }
        }
        System.out.println("Distancia: " + Distancia);
        Max = (int)Distancia;
        System.out.println(Max);
    }//GEN-LAST:event_ColisionesActionPerformed

    private void Planeta1MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Planeta1MenuActionPerformed
        // TODO add your handling code here:
        Planetas P = (Planetas) NodoSeleccionado.getUserObject();
        Planeta1Field.setText(P.toString());
        Planeta1 = P;
    }//GEN-LAST:event_Planeta1MenuActionPerformed

    private void ArbolMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArbolMousePressed
        // TODO add your handling code here:
        if(evt.isPopupTrigger())
        {
            PopUp(evt);
        }
    }//GEN-LAST:event_ArbolMousePressed

    private void ArbolMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArbolMouseReleased
        // TODO add your handling code here:
        if(evt.isPopupTrigger())
        {
            PopUp(evt);
        }
    }//GEN-LAST:event_ArbolMouseReleased

    private void Planeta2MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Planeta2MenuActionPerformed
        // TODO add your handling code here:
        Planetas P = (Planetas) NodoSeleccionado.getUserObject();
        Planeta2Field.setText(P.toString());
        Planeta2 = P;
    }//GEN-LAST:event_Planeta2MenuActionPerformed

    private void CientificosBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CientificosBoxActionPerformed
        // TODO add your handling code here:
        UpdateCBox();
    }//GEN-LAST:event_CientificosBoxActionPerformed

    private void UpdateCBox()
    {
        AdminCientificos C = new AdminCientificos("./Cientificos");
        C.cargarArchivo();
        CientificosBox.setModel(new DefaultComboBoxModel());
        DefaultComboBoxModel M = (DefaultComboBoxModel) CientificosBox.getModel();
        for(Cientificos c : C.getListaCientificos())
        {
            M.addElement(c);
        }
        CientificosBox.setModel(M);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    
    private void PopUp(MouseEvent e)
    {
        Object v1 = Arbol.getSelectionPath().getLastPathComponent();
        NodoSeleccionado = (DefaultMutableTreeNode) v1;
        if(NodoSeleccionado.getUserObject() instanceof Planetas)
        {
            PlanetaSeleccionado = (Planetas) NodoSeleccionado.getUserObject();
            POPUPMENU.show(this, e.getX(), e.getY()+140);
        }
    }
    
    public void Default()
    {
        Planetas M = new Terrestre(5000,13000,"Mercurio",400,300);
        Planetas V = new Terrestre(100000,15000,"Venus",640,260);
        Planetas T = new Terrestre(140000,17000,"Tierra",760,570);
        Planetas Ma = new Terrestre(90000,12000,"Marte",360,360);
        Planetas J = new Gaseosos(400000,40000,"Jupiter",340,310);
        Planetas S = new Gaseosos(300000,30000,"Saturno",560,450);
        Planetas U = new Gaseosos(200000,20000,"Urano",670,690);
        Planetas N = new Gaseosos(200000,20000,"Neptuno",840,900);
        
        PlanetasPublicos.add(M);
        PlanetasPublicos.add(V);
        PlanetasPublicos.add(T);
        PlanetasPublicos.add(Ma);
        PlanetasPublicos.add(J);
        PlanetasPublicos.add(S);
        PlanetasPublicos.add(U);
        PlanetasPublicos.add(N);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddC;
    private javax.swing.JTree Arbol;
    private javax.swing.JProgressBar Barra;
    private javax.swing.JComboBox<String> CientificosBox;
    private javax.swing.JButton Colisiones;
    private javax.swing.JTextField NameField;
    private javax.swing.JPopupMenu POPUPMENU;
    private javax.swing.JTextField Planeta1Field;
    private javax.swing.JMenuItem Planeta1Menu;
    private javax.swing.JTextField Planeta2Field;
    private javax.swing.JMenuItem Planeta2Menu;
    private javax.swing.JCheckBox Publicos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private ArrayList<Planetas> PlanetasPublicos = new ArrayList();
    private DefaultMutableTreeNode NodoSeleccionado;
    private Planetas PlanetaSeleccionado;
    private Planetas Planeta1;
    private Planetas Planeta2;
    private int Max;
    @Override
    public void run() {
        
    }
}
